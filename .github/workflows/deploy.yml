name: Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker image
        run: docker build -t my-api-image .

      - name: Tag Docker image
        run: docker tag my-api-image terraformrg.azurecr.io/my-api-image:v3

      - name: Push Docker image to Azure Container Registry
        run: docker push terraformrg.azurecr.io/my-api-image:v3

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      
      - name: 'Terraform Init'
        # uses: hashicorp/terraform-github-actions@master
        working-directory: "${{ github.workspace }}/aks-terraform"
        run: terraform init
        # with:
        #   tf_actions_version: 0.14.8
        #   tf_actions_subcommand: 'plan'
        #   tf_actions_working_dir: "${{ github.workspace }}/aks-terraform"

      - name: 'Terraform Validate'
        # uses: hashicorp/terraform-github-actions@master
        working-directory: "${{ github.workspace }}/aks-terraform"
        run: terraform validate
        # with:
        #   tf_actions_version: 0.14.8
        #   tf_actions_subcommand: 'plan'
        #   tf_actions_working_dir: "${{ github.workspace }}/aks-terraform"

      - name: 'Terraform Plan'
        working-directory: "${{ github.workspace }}/aks-terraform"
        run: terraform plan

      - name: Terraform Apply
        working-directory: "${{ github.workspace }}/aks-terraform"
        id: check_aks
        run: |
          AKS_EXIST=$(az aks list --resource-group api-demo --query "length([])" -o tsv)
          echo "AKS_EXIST=$AKS_EXIST" >> $GITHUB_ENV

      - name: Deploy AKS with Terraform
        working-directory: "${{ github.workspace }}/aks-terraform"
        if: env.AKS_EXIST == '0'
        run: |
          terraform apply --auto-approve
      
      # - name: Install Helm
      #   run: |
      #     curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      #     chmod +x get_helm.sh
      #     ./get_helm.sh
      #     helm repo add stable https://charts.helm.sh/stable
      #     helm repo update

      # - name: Helm Lint
      #   working-directory: "${{ github.workspace }}/helm"
      #   run: helm lint

      - name: Deploy to AKS
        working-directory: "${{ github.workspace }}"
        run: |
          az aks get-credentials --resource-group api-demo --name my-aks-cluster
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
          kubectl apply -f ingress.yaml