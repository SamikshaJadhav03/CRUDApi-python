name: Deploy to AKS

on:
  push:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
  aks_client_id: ${{secrets.AKS_CLIENT_ID}}
  aks_client_secret: ${{secrets.AKS_CLIENT_SECRET}}
  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build Docker image
        run: docker build -t my-api-image .

      - name: Tag Docker image
        run: docker tag my-api-image terraformrg.azurecr.io/my-api-image:v7

      - name: Push Docker image to Azure Container Registry
        run: docker push terraformrg.azurecr.io/my-api-image:v7

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: "${{ github.workspace }}/aks-terraform"
        run: |
          terraform init

      - name: Terraform plan
        working-directory: "${{ github.workspace }}/aks-terraform"
        run: |
          terraform plan -input=false -var service_principle_client_id=$aks_client_id -var service_principle_client_secret=$aks_client_secret

      - name: Terraform Apply
        working-directory: "${{ github.workspace }}/aks-terraform"
        run: |
           terraform apply -auto-approve -input=false -var service_principle_client_id=$aks_client_id -var service_principle_client_secret=$aks_client_secret
      
      - name: Azure AKS Set Context
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: my-aks-cluster
          resource-group: api-demo

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod +x get_helm.sh
          ./get_helm.sh
          helm repo add stable https://charts.helm.sh/stable
          helm repo update

      - name: Deploy to AKS
        working-directory: "${{ github.workspace }}"
        run: |
          helm lint ./helm
          helm upgrade --install my-crud-api-3 ./helm